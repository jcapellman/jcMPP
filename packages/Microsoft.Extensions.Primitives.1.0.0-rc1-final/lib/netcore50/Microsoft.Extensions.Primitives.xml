<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Extensions.Primitives</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Extensions.Primitives.CancellationChangeToken">
            <summary>
            A <see cref="T:Microsoft.Extensions.Primitives.IChangeToken"/> implementation using <see cref="T:System.Threading.CancellationToken"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.CancellationChangeToken.#ctor(System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Extensions.Primitives.CancellationChangeToken"/>.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/>.</param>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.CancellationChangeToken.ActiveChangeCallbacks">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Extensions.Primitives.CancellationChangeToken.HasChanged">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.Primitives.CancellationChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Extensions.Primitives.IChangeToken">
            <summary>
            Propagates notifications that a change has occured.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged">
            <summary>
            Gets a value that indicates if a change has occured.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.IChangeToken.ActiveChangeCallbacks">
            <summary>
            Indicates if this token will pro-actively raise callbacks. Callbacks are still guaranteed to fire, eventually.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.IChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)">
            <summary>
            Registers for a callback that will be invoked when the entry has changed.
            <see cref="P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged"/> MUST be set before the callback is invoked.
            </summary>
            <param name="callback">The <see cref="T:System.Action`1"/> to invoke.</param>
            <param name="state">State to be passed into the callback.</param>
            <returns>An <see cref="T:System.IDisposable"/> that is used to unregister the callback.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Primitives.StringValues">
            <summary>
            Represents zero/null, one, or many strings in an efficient way.
            </summary>
        </member>
    </members>
</doc>
